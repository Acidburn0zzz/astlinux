--- monit-5.20.0/src/alert.c.orig	2016-03-15 11:41:57.000000000 -0500
+++ monit-5.20.0/src/alert.c	2016-03-15 11:59:12.000000000 -0500
@@ -202,6 +202,64 @@
 }
 
 
+static FILE *_temp_file(char *tmpname)
+{
+	FILE *p = NULL;
+	int fd;
+
+	if ((fd = mkstemp(tmpname)) > -1) {
+		fchmod(fd, S_IRUSR | S_IWUSR);
+		if ((p = fdopen(fd, "w+")) == NULL) {
+			close(fd);
+		}
+	}
+	return p;
+}
+
+
+static boolean_t _sendmail_local(Mail_T mail) {
+	FILE *p;
+	const char *template = "/tmp/monitmail-XXXXXX";
+	const char *mailcmd = "/usr/sbin/sendmail -t";
+	char *tmpname = CALLOC(sizeof(char), strlen(template) + 1);
+	char *system_cmd = CALLOC(sizeof(char), STRLEN);
+	boolean_t failed = false;
+	extern void spawn_system_cmd(const char *cmd);
+
+	for (Mail_T m = mail; m; m = m->next) {
+		strcpy(tmpname, template);
+		if ((p = _temp_file(tmpname)) != NULL) {
+			if (m->from->name) {
+				fprintf(p, "From: \"%s\" <%s>\n", m->from->name, m->from->address);
+			} else {
+				fprintf(p, "From: %s\n", m->from->address);
+			}
+			if (m->replyto) {
+				if (m->replyto->name) {
+					fprintf(p, "Reply-To: \"%s\" <%s>\n", m->replyto->name, m->replyto->address);
+				} else {
+					fprintf(p, "Reply-To: %s\n", m->replyto->address);
+				}
+			}
+			fprintf(p, "To: %s\n", m->to);
+			fprintf(p, "Subject: %s\n", m->subject);
+			fprintf(p, "\n");
+			fprintf(p, "%s\n", m->message);
+			fclose(p);
+			snprintf(system_cmd, STRLEN, "( %s < %s ; rm -f %s ) &", mailcmd, tmpname, tmpname);
+			spawn_system_cmd(system_cmd);
+		} else {
+                	failed = true;
+                	LogError("Mail: Unable to launch '%s' (can't create temporary file)\n", mailcmd);
+		}
+	}
+
+	FREE(system_cmd);
+	FREE(tmpname);
+	return failed;
+}
+
+
 static boolean_t _send(List_T list) {
         boolean_t failed = false;
         if (List_length(list)) {
@@ -208,6 +266,17 @@
                 volatile Mail_T m = NULL;
                 volatile SMTP_T smtp = NULL;
                 volatile MailServer_T mta = NULL;
+
+                if (Run.mailservers && strcmp(Run.mailservers->host, "localhost") == 0) {
+                        while ((m = List_pop(list))) {
+                                if (_sendmail_local(m) == true) {
+                                        failed = true;
+                                }
+                                gc_mail_list((Mail_T *)&m);
+                        }
+                        return failed;
+                }
+
                 TRY
                 {
                         mta = _connectMTA();
