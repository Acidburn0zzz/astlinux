#!/bin/sh

. /etc/rc.conf

init () {
  local server="" IFS

  if [ -z "$ZABBIX_SERVER" ] && [ ! -f /mnt/kd/zabbix_agentd.conf ]; then
    if [ -f /tmp/etc/zabbix_agentd.conf ]; then
      rm /tmp/etc/zabbix_agentd.conf
    fi
    exit
  fi

  if [ ! -x /usr/bin/zabbix_agentd ]; then
    echo "zabbix: zabbix_agentd not installed."
    exit
  fi

  # Allow space/comma in ZABBIX_SERVER, but zabbix requires comma's
  IFS=' ,'
  for i in $ZABBIX_SERVER; do
    server="$server${server:+,}$i"
  done
  unset IFS

  serverport="${ZABBIX_SERVER_PORT:-10051}"
  hostname="${ZABBIX_HOSTNAME:-$HOSTNAME}"
  listenport="${ZABBIX_LISTENPORT:-10050}"
  startagents="${ZABBIX_STARTAGENTS:-3}"
  debuglevel="${ZABBIX_DEBUGLEVEL:-3}"
  timeout="${ZABBIX_TIMEOUT:-3}"

  # Generate /etc/zabbix_agentd.conf configuration file
  if [ -f /mnt/kd/zabbix_agentd.conf ]; then
    echo "# Autogenerated.  Edit /mnt/kd/zabbix_agentd.conf file.
" >/tmp/etc/zabbix_agentd.conf
    cat /mnt/kd/zabbix_agentd.conf >>/tmp/etc/zabbix_agentd.conf
  else
    echo "# Autogenerated.  Do not edit.
# A manually generated zabbix_agentd config will use /mnt/kd/zabbix_agentd.conf if it exists.
Server=$server
ServerPort=$serverport
Hostname=$hostname
ListenPort=$listenport
StartAgents=$startagents
DebugLevel=$debuglevel
Timeout=$timeout
PidFile=/var/run/zabbix_agentd.pid
LogFile=/var/log/zabbix_agentd.log
AllowRoot=0
" >/tmp/etc/zabbix_agentd.conf
  fi
  chown zabbix:zabbix /tmp/etc/zabbix_agentd.conf

  touch /var/log/zabbix_agentd.log
  chown zabbix:zabbix /var/log/zabbix_agentd.log
}

start () {

  if [ -f /etc/zabbix_agentd.conf ]; then
    echo "Starting Zabbix Agent Daemon..."

    touch /var/run/zabbix_agentd.pid
    chown zabbix:zabbix /var/run/zabbix_agentd.pid

    zabbix_agentd -c /etc/zabbix_agentd.conf
  fi
}

stop () {

  if [ -f /var/run/zabbix_agentd.pid ]; then
    echo "Stopping Zabbix Agent Daemon..."

    kill $(cat /var/run/zabbix_agentd.pid) >/dev/null 2>&1
    rm -f /var/run/zabbix_agentd.pid
  fi
}

case $1 in

start)
  start
  ;;

stop)
  stop
  ;;

init)
  init
  start
  ;;

restart)
  stop
  sleep 2
  start
  ;;

*)
  echo "Usage: start|stop|restart"
  ;;

esac

