#!/bin/sh

. /etc/rc.conf

set_local_vars()
{
  local i base pass

  BASE="${LDAP_SERVER_BASEDN:-dc=ldap}"

  if [ -n "$LDAP_SERVER_PASS" ]; then
    PASS="$(slapd -T passwd -s "$LDAP_SERVER_PASS")"
  else
    pass="$(sed -n -r -e 's/^admin:(.*)$/\1/p' "${HTTPSDIR:-/stat/var/www}/admin/.htpasswd" 2>/dev/null)"
    if [ -n "$pass" ]; then
      PASS="{CRYPT}$pass"
    else
      PASS=""
    fi
  fi
}

gen_default_schema()
{
  local BASE="$1" pass dc STAFF_PW DIRECTORY_PW DEFAULT_PW

  # Default password: astlinux
  DEFAULT_PW="{SSHA}cCIf4iVXSEMZn5E/8xBMrSyggWmIIyOM"

  pass="$(sed -n -r -e 's/^staff:(.*)$/\1/p' "${HTTPSDIR:-/stat/var/www}/admin/.htpasswd" 2>/dev/null)"
  if [ -n "$pass" ]; then
    STAFF_PW="{CRYPT}$pass"
  else
    STAFF_PW="$DEFAULT_PW"
  fi

  DIRECTORY_PW="$DEFAULT_PW"

  dc="$(echo "$BASE" | sed -n -r -e 's/^dc=([^,]*).*$/\1/p')"

  echo "#
dn: ${BASE}
objectClass: dcObject
objectClass: organization
dc: ${dc}
o: AstLinux LDAP Server

dn: ou=addressbook,${BASE}
objectClass: organizationalUnit
ou: addressbook

dn: ou=groups,${BASE}
objectClass: organizationalUnit
ou: groups

dn: ou=users,${BASE}
objectClass: organizationalUnit
ou: users

dn: cn=staff,ou=users,${BASE}
objectClass: person
cn: staff
sn: Staff
description: Addressbook read/write user
userPassword: ${STAFF_PW}

dn: cn=directory,ou=users,${BASE}
objectClass: person
cn: directory
sn: Directory
description: Addressbook read-only user
userPassword: ${DIRECTORY_PW}
" | slapd -T add
}

gen_slapd_conf()
{
  local cert key ANONYMOUS

  set_local_vars

  echo "include /etc/openldap/schema/core.schema
include /etc/openldap/schema/cosine.schema
include /etc/openldap/schema/inetorgperson.schema
include /etc/openldap/schema/mozillaAbPersonAlpha.schema
include /etc/openldap/schema/mozillaOrgPerson.schema

pidfile /var/run/slapd/slapd.pid
argsfile /var/run/slapd/slapd.args

logfile /var/log/slapd/slapd.log
loglevel stats"

  cert="${LDAP_SERVER_CERT:-/mnt/kd/ldap/certs/server.crt}"
  key="${LDAP_SERVER_KEY:-/mnt/kd/ldap/certs/server.key}"
  if [ -f "$cert" -a -f "$key" ] && [ "$(stat -c '%U:%G' "$cert")" = "ldap:ldap" -a "$(stat -c '%U:%G' "$key")" = "ldap:ldap" ]; then
    echo "
TLSCertificateFile $cert
TLSCertificateKeyFile $key"
  else
    logger -t slapd -p kern.info "LDAP Server SSL configuration error, continuing..."
    logger -t slapd -p kern.info "Try generating an Asterisk SIP-TLS Server Certificate, which LDAP Server will use by default."
  fi

  if [ "$LDAP_SERVER_ANONYMOUS" = "no" ]; then
    ANONYMOUS=""
    echo "
disallow bind_anon"
  elif [ "$LDAP_SERVER_ANONYMOUS" = "yes" ]; then
    ANONYMOUS="
      by anonymous read"
  elif [ "$IPV6" = "yes" ]; then     # "localhost"
    ANONYMOUS="
      by peername.ip=127.0.0.1 read
      by peername.ipv6=::1 read
      by anonymous none"
  else
    ANONYMOUS="
      by peername.ip=127.0.0.1 read
      by anonymous none"
  fi

  echo "
access to attrs=userpassword
      by self write
      by anonymous auth
      by * none
access to dn.regex=\"^([^,]+,)?ou=(groups|addressbook),${BASE}$\"
      by dn.exact=\"cn=directory,ou=users,${BASE}\" read
      by users write${ANONYMOUS:+$ANONYMOUS}
      by * none
access to *
      by self write
      by dn.exact=\"cn=admin,${BASE}\" write
      by * none"

  echo "
database mdb
suffix \"${BASE}\"
rootdn \"cn=admin,${BASE}\"${PASS:+
rootpw $PASS}
directory /var/lib/ldap

index objectClass eq,pres

searchstack 8
maxsize 10485760
"
}

init () {

  if [ "$LDAP_SERVER" != "yes" ] && [ ! -f /mnt/kd/slapd.conf ]; then
    if [ -f /tmp/etc/openldap/slapd.conf ]; then
      rm /tmp/etc/openldap/slapd.conf
    fi
    return
  fi

  if [ ! -d /var/lib/ldap ]; then
    mkdir -m 0700 -p /var/lib/ldap
    chown ldap:ldap /var/lib/ldap
  fi
  if [ ! -d /mnt/kd/ldap/data ]; then
    mkdir -m 0700 -p /mnt/kd/ldap/data
    mkdir -m 0755 -p /mnt/kd/ldap/certs
    chown -R ldap:ldap /mnt/kd/ldap
  fi
  ln -sf /mnt/kd/ldap/data/data.mdb /var/lib/ldap/data.mdb

  # Use SIP TLS certs if they exist and ours don't exist
  if [ -f /mnt/kd/ssl/sip-tls/keys/server.crt ] && [ ! -f /mnt/kd/ldap/certs/server.crt ]; then
    cp -a /mnt/kd/ssl/sip-tls/keys/server.crt /mnt/kd/ldap/certs/server.crt
    chown ldap:ldap /mnt/kd/ldap/certs/server.crt
  fi
  if [ -f /mnt/kd/ssl/sip-tls/keys/server.key ] && [ ! -f /mnt/kd/ldap/certs/server.key ]; then
    cp -a /mnt/kd/ssl/sip-tls/keys/server.key /mnt/kd/ldap/certs/server.key
    chown ldap:ldap /mnt/kd/ldap/certs/server.key
  fi

  # Generate /etc/openldap/slapd.conf configuration file
  if [ -f /mnt/kd/slapd.conf ]; then
    echo "# Autogenerated.  Edit /mnt/kd/slapd.conf file.
" >/tmp/etc/openldap/slapd.conf
    cat /mnt/kd/slapd.conf >>/tmp/etc/openldap/slapd.conf
  else
    echo "# Autogenerated.  Do not edit.
# A manually generated slapd config will use /mnt/kd/slapd.conf if it exists.
" >/tmp/etc/openldap/slapd.conf
    gen_slapd_conf >>/tmp/etc/openldap/slapd.conf
  fi

  chmod 600 /tmp/etc/openldap/slapd.conf
  chown ldap:ldap /tmp/etc/openldap/slapd.conf

  mkdir -p /var/run/slapd
  chown ldap:ldap /var/run/slapd

  mkdir -p /var/log/slapd
  chown ldap:ldap /var/log/slapd
}

start () {
  local user LISTEN_URLS BASE

  if [ -f /etc/openldap/slapd.conf ]; then
    echo "Starting LDAP Server (slapd)..."

    # Validate slapd.conf file
    if ! slapd -T test -u >/dev/null 2>&1; then
      echo "slapd: Invalid \"/etc/openldap/slapd.conf\" file, slapd failed to start."
      exit 1
    fi

    # Extract the first Base DN suffix
    BASE="$(sed -n -r -e 's/^suffix.*"(.*)".*$/\1/p' /etc/openldap/slapd.conf | head -n1)"
    if [ -z "$(echo "$BASE" | sed -n -r -e 's/^dc=([^,]*).*$/\1/p')" ]; then
      echo "slapd: Invalid Base DN, slapd failed to start."
      exit 1
    fi
    if [ ! -f /mnt/kd/ldap/data/data.mdb ] || ! slapd -T cat -H "ldap:///???(ou=addressbook)" | grep -qi "^dn:.*ou=addressbook,${BASE}"; then
      echo "  Generating default LDAP schema for Base DN \"${BASE}\"..."
      gen_default_schema "$BASE"
    fi

    # Make sure MDB files have 'ldap' permissions
    if [ -f /mnt/kd/ldap/data/data.mdb ] && [ "$(stat -c '%U:%G' /mnt/kd/ldap/data/data.mdb)" != "ldap:ldap" ]; then
      chown ldap:ldap /mnt/kd/ldap/data/data.mdb
    fi
    if [ -f /var/lib/ldap/lock.mdb ]; then
      chown ldap:ldap /var/lib/ldap/lock.mdb
    fi

    if grep -q '^TLSCertificateKeyFile' /etc/openldap/slapd.conf; then
      LISTEN_URLS="ldap:/// ldaps:///"
    else
      LISTEN_URLS="ldap:///"
    fi
    slapd -u ldap -g ldap -h "$LISTEN_URLS"

    # Check for default passwords
    for user in staff directory; do
      if ldapwhoami -x -D "cn=${user},ou=users,${BASE}" -w "astlinux" -H "ldap://127.0.0.1" >/dev/null 2>&1; then
        echo "  WARNING: Default password in use for: cn=${user},ou=users,${BASE}"
        echo "  Change password with: ldappasswd -xW -D \"cn=admin,${BASE}\" -H ldap://127.0.0.1 -S \"cn=${user},ou=users,${BASE}\""
      fi
    done
  fi
}

stop () {

  if [ -f /var/run/slapd/slapd.pid ]; then
    echo "Stopping LDAP Server (slapd)..."
    kill $(cat /var/run/slapd/slapd.pid) >/dev/null 2>&1
  fi
}

case $1 in

start)
  start
  ;;

stop)
  stop
  ;;

init)
  init
  start
  ;;

restart)
  stop
  sleep 2
  start
  ;;

*)
  echo "Usage: start|stop|restart"
  ;;

esac
