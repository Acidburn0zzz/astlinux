#!/bin/sh

. /etc/rc.conf

gen_sqlite3_schema()
{

  sqlite3 -batch /mnt/kd/ldap-odbc.sqlite3 <<EOF
CREATE TABLE 'ldap_oc_mappings' (
  'id' INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  'name' TEXT NOT NULL,
  'keytbl' TEXT NOT NULL,
  'keycol' TEXT NOT NULL,
  'create_proc' TEXT,
  'delete_proc' TEXT,
  'expect_return' INTEGER NOT NULL
);

CREATE TABLE 'ldap_attr_mappings' (
  'id' INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  'oc_map_id' INTEGER NOT NULL REFERENCES ldap_oc_mappings('id'),
  'name' TEXT NOT NULL,
  'sel_expr' TEXT NOT NULL,
  'sel_expr_u' TEXT,
  'from_tbls' TEXT NOT NULL,
  'join_where' TEXT,
  'add_proc' TEXT,
  'delete_proc' TEXT,
  'param_order' INTEGER NOT NULL,
  'expect_return' INTEGER NOT NULL
);

CREATE TABLE 'ldap_entries' (
  'id' INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  'dn' TEXT UNIQUE NOT NULL,
  'oc_map_id' INTEGER UNIQUE NOT NULL REFERENCES ldap_oc_mappings('id'),
  'parent' INTEGER NOT NULL,
  'keyval' INTEGER UNIQUE NOT NULL
);

CREATE TABLE 'ldap_entry_objclasses' (
  'entry_id' INTEGER NOT NULL REFERENCES ldap_entries('id'),
  'oc_name' TEXT
);

EOF
}

gen_slapd_conf()
{
  local cert key

  echo "include /etc/openldap/schema/core.schema
include /etc/openldap/schema/cosine.schema
include /etc/openldap/schema/inetorgperson.schema

pidfile /var/run/slapd.pid
argsfile /var/run/slapd.args
"

  cert="${LDAP_SERVER_CERT:-/mnt/kd/ssl/sip-tls/keys/server.crt}"
  key="${LDAP_SERVER_KEY:-/mnt/kd/ssl/sip-tls/keys/server.key}"
  if [ -f "$cert" -a -f "$key" ]; then
    echo "TLSCertificateFile $cert
TLSCertificateKeyFile $key
"
  else
    logger -t slapd -p kern.info "LDAP Server SSL configuration error, continuing..."
    logger -t slapd -p kern.info "Try generating an Asterisk SIP-TLS Server Certificate, which LDAP Server will use by default."
  fi

  echo "database sql
#suffix \"o=sql,c=RU\"
#rootdn \"cn=root,o=sql,c=RU\"
suffix \"dc=example,dc=com\"
rootdn \"cn=root,dc=example,dc=com\"
rootpw astlinux
dbname ldap
dbuser unused
dbpasswd unused
insentry_stmt \"INSERT INTO ldap_entries (dn,oc_map_id,parent,keyval) VALUES (?,?,?,?)\"
upper_func \"upper\"
concat_pattern \"?||?\"
has_ldapinfo_dn_ru no
"

  echo "#database ldif
#suffix \"dc=example,dc=com\"
#rootdn \"cn=root,dc=example,dc=com\"
#rootpw astlinux
#directory /var/lib/ldap
"
}

init () {

  if [ "$LDAP_SERVER" != "yes" ]; then
    if [ -f /tmp/etc/openldap/slapd.conf ]; then
      rm /tmp/etc/openldap/slapd.conf
    fi
    return
  fi

  # Generate /etc/openldap/slapd.conf configuration file
  if [ -f /mnt/kd/slapd.conf ]; then
    echo "# Autogenerated.  Edit /mnt/kd/slapd.conf file.
" >/tmp/etc/openldap/slapd.conf
    cat /mnt/kd/slapd.conf >>/tmp/etc/openldap/slapd.conf
  else
    echo "# Autogenerated.  Do not edit.
# A manually generated slapd config will use /mnt/kd/slapd.conf if it exists.
" >/tmp/etc/openldap/slapd.conf
    gen_slapd_conf >>/tmp/etc/openldap/slapd.conf
  fi

  chmod 600 /tmp/etc/openldap/slapd.conf

  if [ ! -d /var/lib/ldap ]; then
    mkdir -m 0700 -p /var/lib/ldap
  fi

  if [ ! -f /mnt/kd/ldap-odbc.sqlite3 ]; then
    gen_sqlite3_schema
  fi
}

start () {

  if [ -f /etc/openldap/slapd.conf ]; then
    echo "Starting LDAP Server (slapd)..."
    slapd
  fi
}

stop () {

  if [ -f /var/run/slapd.pid ]; then
    echo "Stopping LDAP Server (slapd)..."
    kill $(cat /var/run/slapd.pid) >/dev/null 2>&1
  fi
}

case $1 in

start)
  start
  ;;

stop)
  stop
  ;;

init)
  init
  start
  ;;

restart)
  stop
  sleep 2
  start
  ;;

*)
  echo "Usage: start|stop|restart"
  ;;

esac
