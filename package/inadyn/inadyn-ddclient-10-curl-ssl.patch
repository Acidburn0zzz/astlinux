--- inadyn-1.96.2/ddclient/ddclient.orig	2014-05-09 18:00:02.000000000 -0500
+++ inadyn-1.96.2/ddclient/ddclient	2014-05-09 18:00:51.000000000 -0500
@@ -1916,7 +1916,7 @@
     if ( $force_ssl || ($globals{'ssl'} and (caller(1))[3] ne 'main::get_ip') ) {
         $use_ssl      = 1;
         $default_port = 443;
-		load_ssl_support;
+        #load_ssl_support;
     } else {
         $use_ssl      = 0;
         $default_port = 80;
@@ -1953,14 +1953,18 @@
 	debug("skipped network connection");
 	verbose("SENDING:", "%s", $request);
     } elsif ($use_ssl) {
-	    $sd = IO::Socket::SSL->new(
-            PeerAddr => $peer,
-            PeerPort => $port,
-            Proto => 'tcp',
-            MultiHomed => 1,
-            Timeout => opt('timeout'),
-        );
-	    defined $sd or warning("cannot connect to $peer:$port socket: $@ " . IO::Socket::SSL::errstr());
+        $0 = sprintf("%s - curl sending to %s port %s", $program, $peer, $port);
+        my $timeout = opt('timeout');
+
+        $reply = <<`CURL_SSL`;
+/usr/bin/curl -ksi0 --user '${login}:${password}' --user-agent '${program}/${version}' \\
+              --connect-timeout $timeout --max-time $timeout \\
+              --url 'https://${server}/${url}' 2>/dev/null
+CURL_SSL
+
+        if (! $reply) {
+            warning("curl cannot connect to $peer:$port");
+        }
     } else {
 	    $sd = IO::Socket::INET->new(
             PeerAddr => $peer,
