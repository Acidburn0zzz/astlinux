#!/bin/sh
. /etc/rc.conf

. /etc/init.d/functions.d/misc

# Define a few variables
# Lockfile
lock="/var/lock/openvpnclient.lock"
# PID
pid="/var/run/openvpnclient.pid"
# PSK file for optional OVPNC_USER_PASS
psk="/tmp/etc/openvpnclient-psk.txt"

init () {
  local IFS

  if ! SYS_is_vpn_type openvpnclient; then
    if [ -f /etc/openvpnclient.conf ]; then
      rm -f /tmp/etc/openvpnclient.conf
    fi
    return
  fi

  #check for existing of tun adapter

  if [ ! -x /sbin/udevd -a ! -e /dev/net/tun ]; then
    # No tun device or udev.  We'll make one now.
    mkdir /dev/net
    mknod /dev/net/tun c 10 200
    modprobe tun
  else
    # Looks like you have udev.  The device will be created automatically.
    modprobe tun
  fi

  if [ -d /mnt/kd/openvpn ]; then
    ln -snf /mnt/kd/openvpn /tmp/etc/openvpn
  else
    echo "openvpnclient: Directory \"/mnt/kd/openvpn\" not found, exiting." >&2
    exit 1
  fi

  if [ -f /mnt/kd/openvpn/openvpnclient.conf ]; then
    # Using OpenVPN Client config file from keydisk
    echo "# Autogenerated.  Edit /mnt/kd/openvpn/openvpnclient.conf file.
" >/tmp/etc/openvpnclient.conf
    cat /mnt/kd/openvpn/openvpnclient.conf >>/tmp/etc/openvpnclient.conf
  else
    # Creating OpenVPN Client config files
    echo "# Autogenerated.  Do not edit.
# A manually generated openvpn-client config will use /mnt/kd/openvpn/openvpnclient.conf if it exists.
dev $OVPNC_DEV
remote $OVPNC_REMOTE $OVPNC_PORT
proto $OVPNC_PROTOCOL
ca $OVPNC_CA
cert $OVPNC_CERT
key $OVPNC_KEY${OVPNC_TA:+
tls-auth $OVPNC_TA 1}
verb $OVPNC_VERBOSITY" > /tmp/etc/openvpnclient.conf

    IFS=$'\n'
    for i in $OVPNC_OTHER; do
      echo "$i" >> /tmp/etc/openvpnclient.conf
    done

    if [ "$OVPNC_LZO" = "yes" ]; then
      echo "comp-lzo" >> /tmp/etc/openvpnclient.conf
    fi
    if [ "$OVPNC_QOS" = "yes" ]; then
      echo "passtos" >> /tmp/etc/openvpnclient.conf
    fi
    if [ -n "$OVPNC_CIPHER" ]; then
      echo "cipher $OVPNC_CIPHER" >> /tmp/etc/openvpnclient.conf
    fi
    if [ -n "$OVPNC_AUTH" ]; then
      echo "auth $OVPNC_AUTH" >> /tmp/etc/openvpnclient.conf
    fi
    if [ -n "$OVPNC_USER_PASS" ]; then
      echo "$OVPNC_USER_PASS" | awk -F' ' '{ print $1; }' > $psk
      echo "$OVPNC_USER_PASS" | awk -F' ' '{ print $2; }' >> $psk
      chmod 600 $psk
      echo "auth-user-pass $psk" >> /tmp/etc/openvpnclient.conf
    fi
    if [ -n "$OVPNC_NSCERTTYPE" ]; then
      echo "ns-cert-type $OVPNC_NSCERTTYPE" >> /tmp/etc/openvpnclient.conf
    fi
    if [ -n "$OVPNC_REMOTE_CERT_TLS" ]; then
      echo "remote-cert-tls $OVPNC_REMOTE_CERT_TLS" >> /tmp/etc/openvpnclient.conf
    fi

    # Static settings -- fine for most users
    echo "# Static settings
client
user nobody
group nobody
resolv-retry infinite
nobind
persist-key
persist-tun
script-security 2
status-version 1
status /var/log/openvpnclient-status.log
log-append /var/log/openvpnclient.log" >> /tmp/etc/openvpnclient.conf
  fi
}

start () {
  if [ -f $lock ]; then
    # we were not shut down correctly
    kill $(cat $pid) >/dev/null 2>&1
    rm -f $pid $lock $psk
    sleep 2
  fi

  if  [ -f /etc/openvpnclient.conf ]; then
    echo "Starting OpenVPN Client..."
    openvpn --daemon  --writepid $pid --config /etc/openvpnclient.conf
    result=$?
    if [ $result -ne 0 ]; then
      echo "openvpnclient: Failed to start." >&2
      return $result
    fi
    touch $lock
  fi
}

stop () {
  if [ -f $pid ]; then
    echo "Stopping OpenVPN Client..."
    kill $(cat $pid) >/dev/null 2>&1
    rm -f $pid $lock $psk
  fi
}

case $1 in

start)
  start
  ;;

stop)
  stop
  ;;

init)
  init
  start
  ;;

restart)
  stop
  sleep 2
  start
  ;;

*)
  echo "Usage: start|stop|restart"
  ;;

esac


