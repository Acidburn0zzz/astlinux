#!/bin/sh
. /etc/rc.conf

. /etc/init.d/functions

# Define a few variables
# Lockfile
lock="/var/lock/openvpn.lock"
# PID
pid="/var/run/openvpn.pid"

init () {
  local IFS

  if ! SYS_is_vpn_type openvpn; then
    if [ -f /etc/openvpn.conf ]; then
      rm -f /tmp/etc/openvpn.conf
    fi
    return
  fi

  #check for existing of tun adapter

  if [ ! -x /sbin/udevd -a ! -e /dev/net/tun ]; then
    # No tun device or udev.  We'll make one now.
    mkdir /dev/net
    mknod /dev/net/tun c 10 200
    modprobe tun
  else
    # Looks like you have udev.  The device will be created automatically.
    modprobe tun
  fi

  if [ -d /mnt/kd/openvpn ]; then
    ln -snf /mnt/kd/openvpn /tmp/etc/openvpn
  else
    echo "No openvpn certificate directory found.
A directory on the keydisk is required.
Manual configuration of certificates is also required."
    exit
  fi

  if [ -f /mnt/kd/openvpn/openvpn.conf ]; then
    # Using OpenVPN Server config file from keydisk
    ln -sf /mnt/kd/openvpn/openvpn.conf /tmp/etc/openvpn.conf
  else
    # Creating OpenVPN Server config files
    echo "#openvpn.conf created from rc.conf settings dynamically at boot
dev $OVPN_DEV
port $OVPN_PORT
proto $OVPN_PROTOCOL
ca $OVPN_CA
cert $OVPN_CERT
key $OVPN_KEY
dh $OVPN_DH
server $OVPN_SERVER
verb $OVPN_VERBOSITY" > /tmp/etc/openvpn.conf
    # push settings from the server to the client
    if [ -n "$OVPN_PUSH1" ]; then
      echo "push \"$OVPN_PUSH1\"" >> /tmp/etc/openvpn.conf
    fi
    if [ -n "$OVPN_PUSH2" ]; then
      echo "push \"$OVPN_PUSH2\"" >> /tmp/etc/openvpn.conf
    fi
    if [ -n "$OVPN_PUSH3" ]; then
      echo "push \"$OVPN_PUSH3\"" >> /tmp/etc/openvpn.conf
    fi
    if [ -n "$OVPN_PUSH4" ]; then
    echo "push \"$OVPN_PUSH4\"" >> /tmp/etc/openvpn.conf
    fi
    # Deprecate OVPN_PUSH1-4 in favor of OVPN_PUSH
    IFS=$'\n'
    for i in $OVPN_PUSH; do
      echo "push \"$i\"" >> /tmp/etc/openvpn.conf
    done

    if [ -n "$OVPN_OTHER1" ]; then
      echo "$OVPN_OTHER1" >> /tmp/etc/openvpn.conf
    fi
    if [ -n "$OVPN_OTHER2" ]; then
      echo "$OVPN_OTHER2" >> /tmp/etc/openvpn.conf
    fi
    # Deprecate OVPN_OTHER1-2 in favor of OVPN_OTHER
    IFS=$'\n'
    for i in $OVPN_OTHER; do
      echo "$i" >> /tmp/etc/openvpn.conf
    done

    if [ "$OVPN_LZO" = "yes" ]; then
      echo "comp-lzo" >> /tmp/etc/openvpn.conf
    fi
    if [ "$OVPN_QOS" = "yes" ]; then
      echo "passtos" >> /tmp/etc/openvpn.conf
    fi
    if [ -n "$OVPN_CIPHER" ]; then
      echo "cipher $OVPN_CIPHER" >> /tmp/etc/openvpn.conf
    fi
    if [ -n "$OVPN_VALIDCLIENTS" ]; then
      echo "tls-verify /usr/sbin/openvpn-tls-verify" >> /tmp/etc/openvpn.conf
    fi

    # Static settings -- fine for most users
    echo "#static setting--modify openvpn init script to change
ifconfig-pool-persist /etc/openvpn/ipp.txt
user nobody
group nobody
persist-key
persist-tun
keepalive 10 60
script-security 2
status-version 2
status /var/log/openvpn-status.log
log-append /var/log/openvpn.log" >> /tmp/etc/openvpn.conf
  fi
}

start () {
  if [ -f $lock ]; then
    # we were not shut down correctly
    kill `cat $pid` >/dev/null 2>&1
    rm -f $pid
    rm -f $lock
    sleep 2
  fi

  if  [ -f /etc/openvpn.conf ]; then
    echo "Starting OpenVPN Server..."
    openvpn --daemon  --writepid $pid --config /etc/openvpn.conf
    if [ $? = 0 ]; then
      touch $lock
    fi
  fi
}

stop () {
  if [ -f $pid ]; then
    echo "Stopping OpenVPN Server..."
    kill `cat $pid` >/dev/null 2>&1
    rm -f $pid
    rm -f $lock
  fi
}

case $1 in

start)
  start
  ;;

stop)
  stop
  ;;

init)
  init
  start
  ;;

restart)
  stop
  sleep 2
  start
  ;;

*)
  echo "Usage: start|stop|restart"
  ;;

esac


