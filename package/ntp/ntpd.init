#!/bin/sh

. /etc/rc.conf

init () {

  # So sntp doesn't complain
  touch /var/db/ntp-kod

  if [ -f /mnt/kd/ntpd.conf ]; then
    ln -sf /mnt/kd/ntpd.conf /tmp/etc/ntpd.conf
  else
    if [ -L /tmp/etc/ntpd.conf ]; then
      rm -f /tmp/etc/ntpd.conf
    fi
    echo "# Autogenerated.  Do not edit.

pidfile /var/run/ntpd.pid
driftfile /var/db/ntpd.drift

restrict default noquery nopeer notrap nomodify
restrict 127.0.0.1" > /tmp/etc/ntpd.conf

    # nothing stops you from having a single value in NTPSERVS
    if [ -n "$NTPSERV" -a -z "$NTPSERVS" ]; then
      echo "ntp: NTPSERV variable is deprecated; use NTPSERVS instead." 1>&2
      NTPSERVS="$NTPSERV"
    fi

    if [ -n "$NTPSERVS" ]; then
      echo "
# NTPd" >> /tmp/etc/ntpd.conf
      for i in $NTPSERVS; do
        echo "server $i" >> /tmp/etc/ntpd.conf
      done
    fi

    echo "
# Undisciplined Local Clock.  This is a fake driver intended for backup
# and when no outside source of synchronized time is available.
server	127.127.1.0	# local clock
fudge	127.127.1.0 stratum 5" >> /tmp/etc/ntpd.conf

    if [ "$NTPBROADCAST" = "yes" ]; then
      echo "
broadcast 224.0.1.1 ttl 1" >> /tmp/etc/ntpd.conf
    fi

  fi
}

start () {
  if [ -f /etc/ntpd.conf ]; then
    local NTPAF

    if [ "$IPV6" != "yes" ]; then
      NTPAF="-4"
    fi

    echo "Starting ntpd..."
    if [ -n "$EXTIP" -a -n "$DNS" -o -r /tmp/mydhcpip -o -r /etc/ppp/pppoe.conf ]; then
      local first=`awk '/^server / { print $2; nextfile; }' /etc/ntpd.conf`

      if nslookup $first >/dev/null; then
        # Set the clock (large change) and exit
        sntp $NTPAF -s -t4 $first
        if [ $? -eq 0 -a -r /dev/rtc ]; then
          hwclock -wu --noadjfile 2>/dev/null
        fi
        sleep 1
        # Maintain the clock (small changes)
        ntpd $NTPAF -g -c /etc/ntpd.conf
      fi
    fi
  fi
}

stop () {

  if [ -f /var/run/ntpd.pid ]; then
    echo "Stopping ntpd..."
    kill $(cat /var/run/ntpd.pid) >/dev/null 2>&1
    rm -f /var/run/ntpd.pid
  fi
}

case $1 in

start)
  start
  ;;

stop)
  stop
  ;;

init)
  init
  start
  ;;

restart)
  stop
  sleep 2
  start
  ;;

*)
  echo "Usage: start|stop|restart"
  ;;

esac

