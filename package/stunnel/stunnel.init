#!/bin/sh

. /etc/rc.conf

gen_stunnel_config()
{
  local type="$1" stunnel="$2" client="" IFS

  if [ "$type" = "client" ]; then
    client="yes"
  fi

  echo "; Autogenerated.  Do not edit.
${client:+
client = $client}${SCERT:+
cert = $SCERT}

socket = l:TCP_NODELAY=1
socket = r:TCP_NODELAY=1

setgid = $SUSER
setuid = $SUSER
debug = $SDEBUG
pid = /var/run/stunnel/${type}.pid
"

  unset IFS
  for i in $stunnel; do
    LISTEN="$(echo $i | cut -d'~' -f1)"
    HOST="$(echo $i | cut -d'~' -f2)"
    SERVICE="$(echo $i | cut -d'~' -f3)"

    if [ "$IPV6" = "yes" ]; then
      # If LISTEN does not contain a ':' accept using IPv6/IPv4
      case "$LISTEN" in
        *:*) ;;
          *) LISTEN=":::$LISTEN" ;;
      esac
    fi

    echo "[$HOST-$SERVICE]
accept = $LISTEN
connect = $HOST:$SERVICE
"
  done
}

init () {

  if [ -n "$STUNNELSERVS" -a -z "$STUNNEL_SERVERS" ]; then
    STUNNEL_SERVERS="$STUNNELSERVS"
    echo "stunnel: Config variable STUNNELSERVS is deprecated, use STUNNEL_SERVERS instead." >&2
  fi

  if [ -n "$STUNNEL_SERVERS" -o -n "$STUNNEL_CLIENTS" ]; then

    SUSER="${STUNNELUSER:-nobody}"
    SDEBUG="${STUNNEL_DEBUGLEVEL:-5}"

    mkdir -p /tmp/etc/stunnel
    mkdir -p /var/run/stunnel
    chown ${SUSER}:${SUSER} /var/run/stunnel

    if [ -n "$STUNNEL_SERVERS" ]; then
      if [ -n "$STUNNELCERT" -a -z "$STUNNEL_SERVER_CERT" ]; then
        STUNNEL_SERVER_CERT="$STUNNELCERT"
        echo "stunnel: Config variable STUNNELCERT is deprecated, use STUNNEL_SERVER_CERT instead." >&2
      fi
      if [ -n "$STUNNEL_SERVER_CERT" ]; then
        SCERT="$STUNNEL_SERVER_CERT"
      elif [ -n "$HTTPSCERT" ]; then
        SCERT="$HTTPSCERT"
      else
        SCERT="/etc/ssl/mini_httpd.pem"
      fi

      gen_stunnel_config server "$STUNNEL_SERVERS" > /tmp/etc/stunnel/server.conf
    fi

    if [ -n "$STUNNEL_CLIENTS" ]; then
      SCERT="$STUNNEL_CLIENT_CERT"

      gen_stunnel_config client "$STUNNEL_CLIENTS" > /tmp/etc/stunnel/client.conf
    fi
  fi

  if [ -z "$STUNNEL_SERVERS" -a -f /tmp/etc/stunnel/server.conf ]; then
    rm /tmp/etc/stunnel/server.conf
  fi
  if [ -z "$STUNNEL_CLIENTS" -a -f /tmp/etc/stunnel/client.conf ]; then
    rm /tmp/etc/stunnel/client.conf
  fi
}

start () {

  if [ -f /etc/stunnel/server.conf ]; then
    echo "Starting Stunnel Server Proxy..."
    stunnel /etc/stunnel/server.conf
  fi
  if [ -f /etc/stunnel/client.conf ]; then
    echo "Starting Stunnel Client Proxy..."
    stunnel /etc/stunnel/client.conf
  fi
}

stop () {

  if [ -f /var/run/stunnel/server.pid ]; then
    echo "Stopping Stunnel Server Proxy..."
    kill $(cat /var/run/stunnel/server.pid) >/dev/null 2>&1
  fi
  if [ -f /var/run/stunnel/client.pid ]; then
    echo "Stopping Stunnel Client Proxy..."
    kill $(cat /var/run/stunnel/client.pid) >/dev/null 2>&1
  fi
}

case $1 in

start)
  start
  ;;

stop)
  stop
  ;;

init)
  init
  start
  ;;

restart)
  stop
  sleep 2
  start
  ;;

*)
  echo "Usage: start|stop|restart"
  ;;

esac

