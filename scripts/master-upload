#!/bin/bash
#
# master-upload input_path
#

MIRROR_IMG_PATH="/downloads/img"

MIRROR_FIRMWARE_PATH="/firmware-1.x"

MIRROR_FIRMWARE_PATH_18="/ast18-firmware-1.x"

input_path="$1"

auth_file="$HOME/.astlinux-ftp-repo"

success_count=0

upload_file()
{
  local remote_dir="$1" file="$2" count="$3"

  ./toolchain/ncftpput -f "$auth_file" -z -r10 "$remote_dir" $file

  if [ $? -eq 0 ]; then
    if [ "$count" = "count" ]; then
      success_count=$((success_count+1))
    fi
  else
    echo "master-upload: failed."
    exit 1
  fi
}

upload_run_images()
{
  local local_dir="$1" firmware_path="$2" ver="/tmp/ver"

  for board in $(ls -1 "$local_dir"); do
    echo "Run Image for Board: $board"
    file="$(ls -1 "$local_dir/$board/"*.tar.gz | head -n1)"
    file_sha1="$(ls -1 "$local_dir/$board/"*.tar.gz.sha1 | head -n1)"
    if [ -n "$file" -a -n "$file_sha1" ]; then
      upload_file "$firmware_path/$board" "$file $file_sha1" count
    else
      echo "master-upload: missing file(s) in \"$local_dir/$board/\""
      exit 1
    fi

    # Successful upload, update the 'ver' file
    file_ver="$(basename "$file" .tar.gz)"
    echo "$file_ver" > "$ver"
    upload_file "$firmware_path/$board" "$ver"
    rm -f "$ver"
    echo ""
  done
}

upload_flash_images()
{
  local local_dir="$1" firmware_path="$2"

  for board in $(ls -1 "$local_dir"); do
    echo "Flash Image for Board: $board"
    file="$(ls -1 "$local_dir/$board/"*.img.gz | head -n1)"
    if [ -n "$file" ]; then
      upload_file "$firmware_path/$board" "$file" count
    else
      echo "master-upload: missing file(s) in \"$local_dir/$board/\""
      exit 1
    fi
    echo ""
  done
}

if [ -z "$input_path" ]; then
  echo "Usage: master-upload input_path"
  exit 1
fi

if [ ! -d "$input_path" ]; then
  echo "master-upload: directory \"$input_path\" not found."
  exit 1
else
  check_img=0
  check_firmware=0
  for dir in $(ls -1 "$input_path"); do
    case $dir in
      *img) check_img=1 ;;
      *firmware-1.x) check_firmware=1 ;;
    esac
  done
  if [ $check_img -eq 0 -o $check_firmware -eq 0 ]; then
    echo "master-upload: missing img/firmware-1.x directories."
    exit 1
  fi
fi

if [ ! -f "$auth_file" ]; then
  echo "master-upload: authentication file \"$auth_file\" not found."
  exit 1
fi

upload_host="$(cat "$auth_file" | awk '/^host / { print $2 }')"
upload_user="$(cat "$auth_file" | awk '/^user / { print $2 }')"
upload_pass="$(cat "$auth_file" | awk '/^pass / { print $2 }')"

if [ -z "$upload_host" -o -z "$upload_user" -o -z "$upload_pass" ]; then
  echo "master-upload: host/user/pass missing in \"$auth_file\""
  exit 1
fi
unset upload_pass

# Upload Asterisk 1.4 .tar.gz run images
upload_run_images "$input_path/firmware-1.x" "$MIRROR_FIRMWARE_PATH"

# Upload Asterisk 1.4 .img.gz flash images
upload_flash_images "$input_path/img" "$MIRROR_IMG_PATH"

# Upload Asterisk 1.8 .tar.gz run images
upload_run_images "$input_path/ast18-firmware-1.x" "$MIRROR_FIRMWARE_PATH_18"

# Upload Asterisk 1.8 .img.gz flash images
upload_flash_images "$input_path/ast18-img" "$MIRROR_IMG_PATH"

echo "
##
## Master Upload Finished for '$success_count' Images
##
"

